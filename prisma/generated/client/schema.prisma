generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Booking {
  id            Int           @id @default(autoincrement())
  cottageId     Int
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime      @default(now())
  guestEmail    String
  guestName     String
  updatedAt     DateTime      @updatedAt
  adults        Int           @default(1)
  children      Int           @default(0)
  deletedAt     DateTime?
  guestPhone    String?
  paymentId     String?
  paymentStatus PaymentStatus @default(UNPAID)
  promoCodeId   Int?
  source        String?       @default("website")
  status        BookingStatus @default(PENDING)
  totalPrice    Float         @default(0.0)
  cottage       Cottage       @relation(fields: [cottageId], references: [id])
  promoCode     PromoCode?    @relation(fields: [promoCodeId], references: [id])
}

model Cottage {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  price         Float
  isBooked      Boolean   @default(false)
  bedrooms      Int       @default(1)
  maxGuests     Int       @default(2)
  amenities     String[]
  images        String[]
  rules         String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  address       String?
  beds          Int       @default(1)
  coverImage    String    @default("")
  discountPrice Float?
  isPublished   Boolean   @default(true)
  latitude      Float?
  longitude     Float?
  slug          String    @unique @default("")
  bookings      Booking[]
  reviews       Review[]

  x Float? // координата X
  y Float? // координата Y
}

model Review {
  id         Int      @id @default(autoincrement())
  cottageId  Int
  userId     Int?
  userName   String
  rating     Int      @default(5)
  comment    String?
  isApproved Boolean  @default(false)
  createdAt  DateTime @default(now())
  cottage    Cottage  @relation(fields: [cottageId], references: [id])
}

model PromoCode {
  id         Int       @id @default(autoincrement())
  code       String    @unique
  discount   Int       @default(10)
  validFrom  DateTime?
  validUntil DateTime?
  isActive   Boolean   @default(true)
  bookings   Booking[]
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PaymentStatus {
  UNPAID
  PAID
  REFUNDED
  FAILED
  PARTIALLY_REFUNDED
}
