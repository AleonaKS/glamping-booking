import { PrismaClient } from './prisma/generated/client'


const prisma = new PrismaClient()

async function main() {
  await prisma.cottage.createMany({
    data: [
      {
        title: "–î–æ–º–∏–∫ —É –æ–∑–µ—Ä–∞",
        description: "–£—é—Ç–Ω—ã–π –¥–æ–º–∏–∫ —Å –≤–∏–¥–æ–º –Ω–∞ –æ–∑–µ—Ä–æ",
        price: 3500,
        bedrooms: 2,
        maxGuests: 4,
        amenities: ["WiFi", "–ö—É—Ö–Ω—è", "–ë–∞–Ω—è"],
        images: ["lake1.jpg", "lake2.jpg"],
        address: "—É–ª. –õ–µ—Å–Ω–∞—è, 15",
        coverImage: "lake_cover.jpg",
        slug: "domik-u-ozera"
      },
      {
        title: "–õ–µ—Å–Ω–æ–π —à–∞–ª–µ",
        description: "–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º–∏–∫ –≤ —Å–æ—Å–Ω–æ–≤–æ–º –ª–µ—Å—É",
        price: 4200,
        bedrooms: 1,
        maxGuests: 2,
        amenities: ["–ö–∞–º–∏–Ω", "–¢–µ—Ä—Ä–∞—Å–∞"],
        images: ["forest1.jpg"],
        address: "—É–ª. –°–æ—Å–Ω–æ–≤–∞—è, 8",
        coverImage: "forest_cover.jpg",
        slug: "lesnoy-shale"
      },
      // –î–æ–±–∞–≤—å—Ç–µ –µ—â–µ 3 –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞
    ],
    skipDuplicates: true
  })
}

main()
  .catch(e => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })

// import 'dotenv/config';
// import { PrismaClient } from '@prisma/client';

// const prisma = new PrismaClient({
//   log: ['query', 'info', 'warn', 'error']
// });

// async function main() {
//     console.log('üîé –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î...');
//   try {
    
//     await prisma.$connect();

//     console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ—Ç—Ç–µ–¥–∂–∏...');
//     const count = await prisma.cottage.count();
//     console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–æ—Ç—Ç–µ–¥–∂–µ–π: ${count}`);

//     if (count === 0) {
//       console.log('‚ûï –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ—Ç—Ç–µ–¥–∂...');
//       await prisma.cottage.create({
//         data: {
//           title: "–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ—Ç—Ç–µ–¥–∂",
//           description: "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ç—Ç–µ–¥–∂–∞", // –¥–æ–±–∞–≤—å—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
//           price: 1000,
//           bedrooms: 1,
//           maxGuests: 2,
//           amenities: ["WiFi"],
//           images: ["https://domsbobrom.com/uploads/images/stati/Koda/glles.png"],
//         //   location: "–¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è", // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
//         //   rating: 4.5
//         }
//       });
//     }

//     const allCottages = await prisma.cottage.findMany();
//     console.log('üè° –í—Å–µ –∫–æ—Ç—Ç–µ–¥–∂–∏:', JSON.stringify(allCottages, null, 2));

//   } catch (error) {
//     console.error('‚ùå –û—à–∏–±–∫–∞:', error);
//   } finally {
//     await prisma.$disconnect();
//   }
// }

// main();
