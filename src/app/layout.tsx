// src/app/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono, Roboto_Slab, Podkova, Bellota, Jura } from "next/font/google";
import "./globals.css";
import ClientProviders from "./providers/ClientProviders";
import { Toaster } from "react-hot-toast";

// Подключаем шрифты с кириллицей и нужным весом
const robotoSlab = Roboto_Slab({ subsets: ["cyrillic"], weight: "400", variable: "--font-roboto-slab" });
const podkova = Podkova({ subsets: ["cyrillic"], weight: "400", variable: "--font-podkova" });
const bellota = Bellota({ subsets: ["cyrillic"], weight: "400", variable: "--font-bellota" });
const jura = Jura({ subsets: ["cyrillic"], weight: "400", variable: "--font-jura" });

const geistSans = Geist({ subsets: ["latin"], variable: "--font-geist-sans" });
const geistMono = Geist_Mono({ subsets: ["latin"], variable: "--font-geist-mono" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="ru">
      <body
        className={`
          ${geistSans.variable} 
          ${geistMono.variable} 
          ${robotoSlab.variable} 
          ${podkova.variable} 
          ${bellota.variable} 
          ${jura.variable} 
          antialiased
        `}
        style={{
          // Можно задать шрифт по умолчанию через CSS-переменную
          fontFamily: "var(--font-roboto-slab), var(--font-podkova), var(--font-bellota), var(--font-jura), sans-serif",
        }}
      >
        <ClientProviders>
          {children}
          <Toaster position="top-right" />
        </ClientProviders>
      </body>
    </html>
  );
}




// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import ClientProviders from "./providers/ClientProviders"; // импортируем ваш провайдер




// // src/app/layout.tsx
// import { Roboto_Slab, Podkova, Bellota, Jura } from 'next/font/google';

// const robotoSlab = Roboto_Slab({ subsets: ['cyrillic'], weight: '400' });
// const podkova = Podkova({ subsets: ['cyrillic'], weight: '400' });
// const bellota = Bellota({ subsets: ['cyrillic'], weight: '400' });
// const jura = Jura({ subsets: ['cyrillic'], weight: '400' });

// // В body или корне ставите fontFamily из одного из них или переключаете динамически





// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en">
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
// //         <ClientProviders>
// //           {children}
// //         </ClientProviders>
// //       </body>
// //     </html>
// //   );
// // }

// // src/app/layout.tsx
// import { Toaster } from 'react-hot-toast';

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <ClientProviders>
//           {children}
//           <Toaster position="top-right" />
//         </ClientProviders>
//       </body>
//     </html>
//   );
// }
